name: 🚀 CI/CD Pipeline

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  lint-and-test:
    name: 🧪 Lint & Test
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
      
    - name: 🔧 Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
        
    - name: 📦 Install dependencies
      run: yarn install --frozen-lockfile
      
    - name: 🔍 Type check
      run: yarn type-check
      
    - name: 🧹 Lint code
      run: yarn lint
      
    - name: 🏗️ Build project
      run: yarn build
      
    - name: 📊 Upload build artifacts
      uses: actions/upload-artifact@v4
      if: matrix.node-version == '20.x'
      with:
        name: build-files
        path: .next/
        retention-days: 1

  security-scan:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
      
    - name: 🛡️ Run security audit
      run: yarn audit --level moderate
      continue-on-error: true
      
    - name: 🔍 Check for vulnerabilities
      run: |
        if yarn audit --level high; then
          echo "✅ No high-severity vulnerabilities found"
        else
          echo "⚠️ High-severity vulnerabilities detected"
          exit 1
        fi

  deploy-preview:
    name: 🌐 Deploy Preview
    runs-on: ubuntu-latest
    needs: [lint-and-test]
    if: github.event_name == 'pull_request'
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
      
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'yarn'
        
    - name: 📦 Install dependencies
      run: yarn install --frozen-lockfile
      
    - name: 🏗️ Build for preview
      run: yarn build
      
    - name: 💬 Comment PR with preview info
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '🚀 **Vista previa construida exitosamente!**\n\n✅ Verificaciones de calidad pasadas\n✅ Proyecto construido sin errores\n\nListo para revisión y merge.'
          }) 